[
	"Events",
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nAdvice advice0 = null;\nauthorizationAttributeSourceAdvisor0.setAdvice(advice0);\nAuthorizationInterceptor authorizationInterceptor0 = null;\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nAdvice advice0 = null;\nauthorizationAttributeSourceAdvisor0.setAdvice(advice0);\nAuthorizationInterceptor authorizationInterceptor0 = null;\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1595",
		"value":"-1615"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"t"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"' is more specific than '",
		"value":"' is more specificthan '"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"hhs_j\\WjT]b~)M~H.=",
		"value":"hhs_j\\WqjT]b~)M~H.="
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3041",
		"value":"-3031"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1082",
		"value":"-1057"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-64"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"HTTP"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SOCKS"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"HE 7\\J)Lt|9p6"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"80",
		"value":"105"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"rbnu}/=2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-335"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"22",
		"value":"37"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"c"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"384",
		"value":"403"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"K|d[$Yuh\\;b"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"E^Hv6CZsjb"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-412"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"7"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3694",
		"value":"3700"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"690"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"#"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"4sp"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"-5.788662"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"FjXWmdRE-w-,K<[CQ+",
		"value":"FjXWmdRE-y-,K<[CQ+"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"*bBS|.R^"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"c.3#w",
		"value":"c3#w"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"3mYV4",
		"value":"3mYV4"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"367",
		"value":"394"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2255"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Xrh|",
		"value":"Xrh3|"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1831"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"824",
		"value":"835"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":","
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2574"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"436"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1964"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-50"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"302",
		"value":"275"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"w.",
		"value":"."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"-6"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"nh>+[v0YS}#"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Q8bJ`-\"iwvE,RGVq7z"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"13"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3345"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"*",
		"value":"'"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"823"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Byte array must not be null"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"FULL"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-678"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"510"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"lz)}$F4ua@I",
		"value":"lz)}$F4uaN@I"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3338"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1",
		"value":"11"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4107"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"39"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"30"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"5390"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"~",
		"value":"n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4095"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":">?|q%cYTIC*"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"g"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-11"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"915"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"284"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"6"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1017",
		"value":"1013"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1580"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"824",
		"value":"793"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-916"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"150"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"N|",
		"value":"N{"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"j,;lB\"J*}|U5q-.KD",
		"value":"j,;lB\"J*}|U5q-.KD"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"uitII(Il(",
		"value":"uitIJ(Il("
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"X[V~l",
		"value":"X[V~lX"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1906",
		"value":"-1870"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"82"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"616"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1602"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1964"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"ON|8:",
		"value":"O|8:"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2083",
		"value":"-2083"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"12",
		"value":"-2"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1012"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1",
		"value":"40"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"5!^xNU#maeiHq^W{3k:"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3189"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"e"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"PA%)[]}v"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"38"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"264"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"30"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"<8"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-975"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1836",
		"value":"-1836"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"PDT90NTAH.b1I\\=0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"181"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"4S+`E%WB`"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-869",
		"value":"-855"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"~}6/tr"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"238"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"13",
		"value":"-24"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"319",
		"value":"346"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"ZK2Fe>N[+O>nMn2",
		"value":"ZKd2Fe>N[+O>nMn2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1326"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"397"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"30"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"' to bean named '",
		"value":"' to bean named '"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"&j/D",
		"value":"&j/"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"\";K~gOy)z$-kg2",
		"value":"\";K~gOy)z$|-kg2"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"3a8x'b999+",
		"value":"a8x'b999+"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-481",
		"value":"-488"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2187"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"447.06763"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An authorizer must be cnfigured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"h.",
		"value":"4h."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-425"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":")L3~A^nUOSH/r~}3iDL",
		"value":")L3~A^nUOSH/r~}3iDL"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1077"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nint int0 = 1077;\nauthorizationAttributeSourceAdvisor0.setOrder(int0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"POST",
		"value":"POSET"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2039"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nint int0 = 1077;\nauthorizationAttributeSourceAdvisor0.setOrder(int0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2",
		"value":"-3"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-30"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"7"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1492"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"37",
		"value":"51"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.springframework.beans.factory.BeanInitializationException",
		"value":"org.springframeworkm.beans.factory.BeanInitializationException"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1574"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-4"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"p/1h8B"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-505",
		"value":"-508"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"37",
		"value":"59"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"9"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"Y"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"qJC\\q[Zh",
		"value":"qJC\\q[Yh"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.transaction.TransactionDefinition"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"k\u007FXq,y~I6",
		"value":"k\u007FXs,y~I6"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Using JTA TransactionManager: ",
		"value":"U{ing JTA TransactionManager: "
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"6"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-938",
		"value":"-921"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1394"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"751"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"30",
		"value":"27"
	},
	{
		"Type":"Event: search",
		"DataType":"LONG",
		"oldValue":"0",
		"value":"20"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"18"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"N"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"y[2$oG#Ou",
		"value":"y[4$oG#Ou"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"k\u007FXq,y~I6",
		"value":"k\u007FXq,y~I6"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]kEs#n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"("
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"EKNxY!h*fT'C$\"\u007F"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"DOUBLE",
		"value":"3531.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"DOUBLE",
		"value":"-1553.3980306"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-1248.87",
		"value":"-1220.9225"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-84"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1476.4"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nAuthorizer authorizer0 = null;\nauthorizationAttributeSourceAdvisor0.setAuthorizer(authorizer0);\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nMethod method0 = null;\nClass<JSpinner.ListEditor> class0 = JSpinner.ListEditor.class;\nboolean boolean0 = authorizationAttributeSourceAdvisor0.isRuntime();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nAuthorizer authorizer0 = null;\nauthorizationAttributeSourceAdvisor0.setAuthorizer(authorizer0);\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nMethod method0 = null;\nClass<JSpinner.ListEditor> class0 = JSpinner.ListEditor.class;\nboolean boolean0 = authorizationAttributeSourceAdvisor0.isRuntime();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"319",
		"value":"312"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1269"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"303",
		"value":"289"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1143"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2876"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAVdvisor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"1156"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1361"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2866",
		"value":"2874"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-3124.132"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"716",
		"value":"720"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"[5m4fh\\s02",
		"value":"[&5m4fh\\s02"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Using JTA TransactionManager: ",
		"value":"Using JTA TraosactionManager: "
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"GdqvWc]iL]fnaZ.",
		"value":"GfqvWc]iL]fnaZ."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-935"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1449",
		"value":"1425"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"VtHP"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"44",
		"value":"4"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2609"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2710"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] of service ["
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"193"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Invalid array index in property path '",
		"value":"InvaliOd array index in property path '"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"4"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-667",
		"value":"-652"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2147"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1067",
		"value":"1054"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"245"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1410",
		"value":"-1464"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"685"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-667",
		"value":"-682"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"352"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2152"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"h4_dPw_vu\"lQei||E[",
		"value":"h4_dPw_vu\"lQei||EZ"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1432",
		"value":"1413"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"17"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Jw"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-866"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2152",
		"value":"2129"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1112"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"307"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"17",
		"value":"21"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"180"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"452"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"30"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"628"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2495"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"595"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1588"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-912"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1112",
		"value":"-1112"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"k>,s)|"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4321"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1078"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"l#+wloj(s{ha+\u007F(rN3"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2152",
		"value":"2142"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2152",
		"value":"2145"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"713"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2025"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"17",
		"value":"13"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"6433"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"990"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"xR:j/KNO/UR\")6p\\D"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nAuthorizer authorizer0 = null;\nauthorizationAttributeSourceAdvisor0.setAuthorizer(authorizer0);\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nString string0 = \"\";\nDelegatingIntroductionInterceptor delegatingIntroductionInterceptor0 = new DelegatingIntroductionInterceptor(string0);\nClass<Integer> class0 = Integer.class;\nDefaultIntroductionAdvisor defaultIntroductionAdvisor0 = new DefaultIntroductionAdvisor(delegatingIntroductionInterceptor0, class0);\nDefaultIntroductionAdvisor defaultIntroductionAdvisor1 = new DefaultIntroductionAdvisor(authorizationInterceptor0, defaultIntroductionAdvisor0);\nauthorizationAttributeSourceAdvisor0.setClassFilter(defaultIntroductionAdvisor1);\nboolean boolean0 = authorizationAttributeSourceAdvisor0.isRuntime();\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":",8q]hop$~9R"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.transaction.UnexpectedRollbackException"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"724"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-3.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1322"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"17",
		"value":"23"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-218"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"LONG",
		"value":"-4452"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"LONG",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"{qsP4g"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"`U8"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"LONG",
		"value":"-831"
	},
	"EndSeed"
][
	"Events",
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3825",
		"value":"-3835"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"1"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"936"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3608",
		"value":"3593"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1837"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"`>UY3",
		"value":"`>U,Y3"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1891"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1327"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"563",
		"value":"578"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h>o"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"2"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1425",
		"value":"1456"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"1110"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Cannot access HTTP invoker remote service at ["
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2277",
		"value":"2289"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"921"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1224"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1621"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-8"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"3928.41"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-210.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-51"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-331",
		"value":"-323"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"^yZ2*}D(^vw",
		"value":"^yZ2*}D)^vw"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\nAuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"JMX access failed\";\nLabel label0 = new Label(string0);\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\nAuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"JMX access failed\";\nLabel label0 = new Label(string0);\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2277",
		"value":"2283"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-262"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2377",
		"value":"-2362"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"30"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"16"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\nAuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"JMX access failed\";\nLabel label0 = new Label(string0);\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\nAuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"JMX access failed\";\nLabel label0 = new Label(string0);\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"2"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\"NFB*DdR\\Bw6x\\P6}V"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-1.0",
		"value":"-1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3458",
		"value":"-3450"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"jCcj.|@Rhw",
		"value":"jCcl.|@Rhw"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1137",
		"value":"1152"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1830"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2679"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"12",
		"value":"54"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1496",
		"value":"-1497"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"11"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":")w !|YqG8hl",
		"value":")w !|YqG8l"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"8"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"'cU=zPNX",
		"value":"'cU=zPNX"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"APPLICATION_MODAL"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2154"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"949"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"986",
		"value":"977"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"904.3213"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"org.jsecurity.spring.security.interceptr.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"7"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"M3.er&a(uXT[H\\xvD4"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-12"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"382"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"}5DLC",
		"value":"}5DLC"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-640",
		"value":"-662"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"serviceInterface must be an interface"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"694",
		"value":"701"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"692"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"6"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3202",
		"value":"3224"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-746.2",
		"value":"-746.2"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2354",
		"value":"2354"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"APPLICATION_MODAL"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"'cU=zPNX",
		"value":"'cUzPNX"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"-v+p>"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1940"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"q"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"13"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2097"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"N!5lKiY:^S'N\"*EPu#",
		"value":"N!5lKiY:^S'N\"*EPu%"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"7PQ`-50L1%:O|Hl6"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-706"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nAuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nObject object0 = new Object();\nDelegatingIntroductionInterceptor delegatingIntroductionInterceptor0 = new DelegatingIntroductionInterceptor(object0);\nauthorizationAttributeSourceAdvisor0.setAdvice(delegatingIntroductionInterceptor0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nAuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nObject object0 = new Object();\nDelegatingIntroductionInterceptor delegatingIntroductionInterceptor0 = new DelegatingIntroductionInterceptor(object0);\nauthorizationAttributeSourceAdvisor0.setAdvice(delegatingIntroductionInterceptor0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2083"
	},
	{
		"Type":"Event: search",
		"DataType":"BYTE",
		"oldValue":"41",
		"value":"26"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"BYTE",
		"value":"34"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"21",
		"value":"9"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"378"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1540"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"z{-QcB~GV\\",
		"value":"z{-QcBy~GV\\"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-4045",
		"value":"-4056"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h*Uli~FgE3kJz"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"WN5g\"D_&l|SA\u007FL;"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"V',kwgP{SpcQ"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] is not of required type ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\\J8H1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1681"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"1052"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"2092.6943"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"E[d70"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"490"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"2279.4731"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] is not an interface"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"183"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1127"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1441"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":":j>xt\u007FM\u007F9ei~AJMH"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1929"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.aop.TrueMethodMatcher"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2004"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"{YR{\"#Q"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"GP^"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":",$'np2)Won3W*_`75[Q"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-70"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1700"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-384"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3533"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"hCE~Z$zJ"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-296"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1100.1969"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2714"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1285"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"354"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"iogmsx-"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1462"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"55"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":">CS'|.lV0O3r#4`L"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"u\"Pbix>$Fc-Fv)3AI}"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"946"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"117.22"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"?@Yi1^Y=gdq;"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"sD|"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"mPj}k=MjWGM"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2615"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"8"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"6"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"7wlN[(:k{/SsJ[Cni>",
		"value":"7wlN[(:k{/SsJ[ni>"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"m5,t>\u007F'Sd<5s!P"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"499"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"297",
		"value":"305"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"4"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"7wlN[(:k{/SsJ[Cni>",
		"value":"7%lN[(:k{/SsJ[Cni>"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3EH"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3210"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"58"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1161",
		"value":"1131"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1007",
		"value":"-971"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1861",
		"value":"-1884"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2461",
		"value":"-2470"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3358"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1894"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"6",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-869",
		"value":"-881"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1830",
		"value":"1810"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"QHwCca7;`7B{#A1>",
		"value":"QHwCca7;`7{#A1>"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"^'Or96qZV"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"w|<$fa[|wbRg",
		"value":"w|<$fa|wbRg"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-447",
		"value":"-462"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"4179"
	},
	{
		"Type":"Event: search",
		"DataType":"BYTE",
		"oldValue":"-93",
		"value":"-76"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"q5n9"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"949"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"1125"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"130",
		"value":"104"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"128",
		"value":"147"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1031"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"37",
		"value":"39"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"-31"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"t"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"z!5LD4",
		"value":"z!5LF4"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"27"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3709",
		"value":"3727"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"128",
		"value":"131"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"37",
		"value":"29"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"1"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"z!5LD4",
		"value":"z!5L4"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"67"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttriwbuteSourceAdvisor"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"H8Z#*6B9;\\5",
		"value":"H8Z#*6B9;D\\5"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-459"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-427",
		"value":"-421"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"SwV?7b?_"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Lg",
		"value":"LXg"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"G"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"N_iA99F<$QT'\u007Fb)L?M",
		"value":"N_iA99F<$QT'\u007Fb)?M"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1854"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"359"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"56W-J^HzYqZ %("
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1305"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1139"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-442",
		"value":"-438"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"0.024951776"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2789"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-3"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"*oX\u007Fsx^+.TiQ"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"w,-&qUz'{"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1771",
		"value":"1714"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"13"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"YcqDO<[5VFf",
		"value":"YcqDO<[5VF"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"80"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"235",
		"value":"233"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"h<r*\"['l'vW,'j1+d?",
		"value":"h<[r*\"['l'vW,'j1+d?"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1218",
		"value":"-1217"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"777"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-921"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"h"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"85"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":",",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":":"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"0c"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":".a>Bq"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"S"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"311",
		"value":"290"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2451",
		"value":"-2449"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-274"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-409"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"265"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"KP\\lK|j0|t]"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"XB uPXfb\\\"wc=>mGd"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"_}8IvyLY"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3803"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1731"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1671"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"295"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.authz.NoSuchPrincipalException"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"ikspyYA"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-5242"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1576.97"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2192"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1709"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3533"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"java.lang.Class"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"args: "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Bean name must not be empty"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-204"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"481",
		"value":"517"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"14"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"gMbDO?9Ej",
		"value":"JgMbDO?9Ej"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"530"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1974",
		"value":"1976"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2007",
		"value":"1983"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An author#izer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"DBH0#X!cMwaKK%l\\g_:"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1482"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";s"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"4794"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"101",
		"value":"109"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2567",
		"value":"2566"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-154"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-643",
		"value":"-644"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-90.44517"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-12"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-197",
		"value":"-187"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3006",
		"value":"-2978"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":";M\u007F\u007FV96<4J8",
		"value":";M\u007F\u007FV96;4J8"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Se>>QoN[X=%k m",
		"value":"Se>>QoN[Xg=%k m"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"P]o]cW}D)(=b"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.ri.authz.DelegatingAuthorizationContext"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3984"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Cannot set BeanWrapperImpl target to a null object"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-2039.4"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"-20"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1443",
		"value":"1431"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-176"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"-NH}@PI/>",
		"value":"-N}@PI/>"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"NjEq0[",
		"value":"NNjEq0["
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"405"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1041.3"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"TED <+g$lGAr#h-",
		"value":"TD <+g$lGAr#h-"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-541"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"v5\"\u007FFK"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1",
		"value":"23"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"&",
		"value":"&&"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4482",
		"value":"4472"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"w?i/jg4I*)f&6mnM#",
		"value":"w?i/jg4I*)f&6mnM#"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"DISPLAY"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-5"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1008",
		"value":"1020"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3052"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"425.761",
		"value":"408.72852"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1375"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"{o"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"`4xj'P[[Gdg",
		"value":"`4xj'P[[dg"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\u007FTW`%tDH\"7TBl"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2689"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.aop.DynamicIntroductionAdvice"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-775",
		"value":"-781"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"pU+~+Y 5u"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"25"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1521.3514"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"579"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"13",
		"value":"8"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"26"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"541",
		"value":"550"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-22"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-4"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"YF1W#Ef%Z0;mIOZ$}"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"@fGAE@"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.beans.BeanWrapperImpl"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"14"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3874",
		"value":"-3891"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3107",
		"value":"3120"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"DOUBLE",
		"value":"1.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"436"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-2740.423",
		"value":"-2740.4"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-9"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2094"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"[A[mhd^}l0Q9[xXg;"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"639"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4996",
		"value":"5040"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1049"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"boh($86*Uh#HQM"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-1576.9634",
		"value":"-1577.5557"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-33"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1.0",
		"value":"8.347902"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-226"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-926"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.orm.toplink.TopLinkInterceptor"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Could not connect to remote EJB ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2144"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"p"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"5409",
		"value":"5392"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"3rSo",
		"value":"3qSo"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"6"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.jdbc.datasource.SingleConnectionDataSource"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"37",
		"value":"47"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-85"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1785"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.authz.UnauthorizedException"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-16"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-12"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"199",
		"value":"200"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"19"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"%}q",
		"value":"%e}q"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"285",
		"value":"304"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-639"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"647"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1273",
		"value":"-1282"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"6",
		"value":"-13"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"896",
		"value":"906"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"AUGUST"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";=1e&GbpQ5AQ"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"12"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"^(;tq>=SXh1ZL^g$vAF"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1737"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"n~"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"F0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"106"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"wJg'Xo%Fh"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"807"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"608"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3394"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1665"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"444",
		"value":"455"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"896",
		"value":"919"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-12"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"LONG",
		"oldValue":"1608",
		"value":"1615"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"30",
		"value":"29"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"jK\u007FK<^on9.",
		"value":"jK\u007FK<^on9."
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"30",
		"value":"37"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1825"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"X",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"19",
		"value":"-10"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"12",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-19"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1420"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"APRIL"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"OCTOBER"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Cannot specify arguments in the getBean() method when referring to a singleton bean definition"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-245.4163"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":";"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"c@J",
		"value":"cr@J"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1894"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"javax.transaction.Transaction",
		"value":"javax.transaction.Transzaction"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = null;\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1846"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"753",
		"value":"734"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = null;\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"V_3r<\\F"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-124",
		"value":"-138"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1105"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1532",
		"value":"-1536"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"DOUBLE",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2711.08411",
		"value":"2709.5386652651264"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"8"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-41"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"] is ",
		"value":"] is+"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-443"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"AT^5;>.WHDx~3d~IN`",
		"value":"AT^5;>.WHDx~3dIN`"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = null;\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"Y"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = null;\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nauthorizationAttributeSourceAdvisor0.setSecurityInterceptor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = null;\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = null;\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor(authorizationInterceptor0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.setAuthorizer(modularAuthorizer0);\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1346"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-197"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"643"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1957.9513",
		"value":"1957.1062"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"5sHA}.x7lX+|Y]s&+"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-503",
		"value":"-501"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"11"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"30"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"jG%MuMId5lHIRPJ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2456"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-2"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"O9Eh-)wB{",
		"value":"O9Eh-)w(B{"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-5176",
		"value":"-5165"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"3"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"^\\gv^9",
		"value":"^\\gv^"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2390"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Unable to obtain MBean info for bean ["
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"387"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"L5dF",
		"value":"L5d"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"44"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-216.11848",
		"value":"-216.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An authorizer mus: be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"4Fbs_=\\:T*",
		"value":"4Fbs_=u\\:T*"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1206",
		"value":"-1202"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"1156"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2871"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-33",
		"value":"-19"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"About to invoke write method ["
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1122"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"75",
		"value":"69"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An autho7rizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Invoking setResourceLoader on ResourceLoaderAware bean '"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"[Assertion failed] - this expression must be true"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"467",
		"value":"464"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"5"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"N"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"nrg.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#O-(&w^pUEwbx?rsQd"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"3p\\#xF(",
		"value":"3p\\#F("
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2147"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SHORT"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"QZmue95HwE>+"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"|vJu)`nc",
		"value":"|vJu)^nc"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"721",
		"value":"705"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"6"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"459",
		"value":"487"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4291"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3399"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"356"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizatinAttributeSourceAdvisor"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"/gwL2wm3b%.[j'_",
		"value":"/gwL2wm3b%s.[j'_"
	},
	"EndSeed"
][
	"Events",
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"30"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"RQ</Mkbw"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"647"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"26"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Q8{m(z6}sp%\"O~\\){NN"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1828"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-3.7569"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-5"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"&TVe?9{M"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1965"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-556"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"802"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"_=AOwW0=.1j"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"*xu\"!O;~UQj!Ya",
		"value":"*x\"!O;~UQj!Ya"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":",",
		"value":"K,"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";06{^2sS"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1208",
		"value":"1221"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3325"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4141",
		"value":"4150"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"-0.3474137"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Yj8!}Ocg\u007FO@x..OrB",
		"value":"Yj8!}Ocg\u007F%O@x..OrB"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Ch8y71p",
		"value":"Ch871p"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An authorizer must be configured if no security interceptor is expliitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2576"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Cannot get entity interceptor via bean name if no bean factory set"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"440"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"512"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2212"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"*2t(RWIv[]_6<4aY"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"\"i$Xg[H/=os[hH-RF",
		"value":"\"i$Xg[H/=o[hH-RF"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3985",
		"value":"-3972"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"$QB7+P}di/}dQ,BR|"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"12"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"22",
		"value":"31"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"|-G^EX",
		"value":"|-cG^EX"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":".4nUEH8%pVGG"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"l0cdXCy",
		"value":"l0cdXy"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-267.59735"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3374"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2194"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Ch8y71p",
		"value":"Chy71p"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2563",
		"value":"2530"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"899",
		"value":"898"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-7264",
		"value":"-7251"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"12"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-3657.3276"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-545"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	"EndSeed"
][
	"Events",
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORT_ORDER_CHANGED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORT_ORDER_CHANGED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1221"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1743"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-914",
		"value":"-938"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1342",
		"value":"-1354"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1280",
		"value":"1290"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORT_ORDER_CHANGED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"18"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"FI-uD"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"4PP 9b\\h+3<xV->n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"orIg.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3188",
		"value":"-3183"
	},
	{
		"Type":"Event: search",
		"DataType":"LONG",
		"oldValue":"-1374",
		"value":"-1350"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-4433.3"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] of bean '"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1595",
		"value":"-1575"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"22",
		"value":"-19"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"25"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-821"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An authoritzer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"-:",
		"value":"*-:"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"#P|eY~\u007Fu",
		"value":"#P|eY~\u007FuG"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"3"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3657"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-7"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"122",
		"value":"127"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"313",
		"value":"288"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"6",
		"value":"9"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.springframework.jdbc.datasource.DriverManagerDataSource",
		"value":"org.springframework.jdbc.datasourcRe.DriverManagerDataSource"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":":\\2.Vv>(CTdz]v4>"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2574"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"188"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"64"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"6",
		"value":"6"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"t*<\"|a&h7\"^-"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"587"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1746",
		"value":"1714"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"M!pK-]k?a6\"bV"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"5&aj-CP_Kfs>j",
		"value":"5&aj-CP_Kfs>jZ"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORT_ORDER_CHANGED"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2253",
		"value":"2260"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"13"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2314"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"104"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"uuQ"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"6",
		"value":"39"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2033"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"26"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"(C|9"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"6",
		"value":"19"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1989",
		"value":"-1962"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-3"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-79"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3761"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"wdAh=qi66-N\"I"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"20"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"JQ*fCG"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2918",
		"value":"-2958"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"<YGo8\"bYbbNaNe?gUp"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"-31"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1989",
		"value":"-1989"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"457"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1",
		"value":"2"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"837",
		"value":"826"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"293.27"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"]; ",
		"value":"^; "
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"]; ",
		"value":"] "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":":"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"r"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2219"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"]; ",
		"value":"] "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"z$["
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2064",
		"value":"2074"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"13"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"-30"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"8zM.",
		"value":"8zM"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1754"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-93"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4006",
		"value":"3973"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"6",
		"value":"-12"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-515"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2080"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"433",
		"value":"404"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORT_ORDER_CHANGED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"673"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4991"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2728"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Rebinding JNDI object with name ["
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"2"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1.0",
		"value":"6.4598588877298475"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"12",
		"value":"25"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1",
		"value":"-9"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2247"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1989",
		"value":"-1995"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":":K6kn 4RJ=n",
		"value":":vK6kn 4RJ=n"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-15"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3951"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-914",
		"value":"-944"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2663",
		"value":"-2676"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SORTED"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2060"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"814"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"`?[u pZ"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"788",
		"value":"825"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1794"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"787",
		"value":"791"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2528"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"835",
		"value":"838"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3034"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"748"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"5a",
		"value":"5_a"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-163",
		"value":"-180"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"A"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"; factoryMethodName="
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"c8\\[Hu",
		"value":"c8\\[Hu"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1082",
		"value":"-1050"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":");Oc9&,N;0jiZ)!:"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"pU",
		"value":"pW"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":">GiO[:/B",
		"value":">GiO[f:/B"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.springframework.beans.factory.support.BeanDefinitionValidationException",
		"value":"orgt.springframework.beans.factory.support.BeanDefinitionValidationException"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"c8\\[Hu",
		"value":"c8\\[Hv"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"cg!\".bJE#.Ec"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An authorizer mustbe configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"359"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"yF9"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3871"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-2"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3530",
		"value":"-3561"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-20"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"127"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"553"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"<oZ)gtp",
		"value":"<oZgtp"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"LINEAR_RGB"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3075"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"APPLICATION_MODAL"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-102",
		"value":"-136"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1201"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-727"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1372",
		"value":"1359"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"PpCZ&&Q2wZ$=piRwgM",
		"value":"PnCZ&&Q2wZ$=piRwgM"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.springframework.aop.support.Pointcuts$SetterPointcut",
		"value":"org.springframework.aop.support.Pointcuts$SetterPoiltcut"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"? ",
		"value":"W? "
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4701",
		"value":"4697"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1035",
		"value":"1018"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"377",
		"value":"350"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"WARN: Please see http://www.slf4j.org/codes.html#release for an explanation."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"299"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"method '",
		"value":"lethod '"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"68KhwGt!n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"]; matched="
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"p|nM",
		"value":"p|lnM"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"W"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-22"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4689",
		"value":"4719"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"=<",
		"value":"<"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"xqu]E$Z/l_2"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"8"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4200",
		"value":"4189"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1882",
		"value":"1932"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Il&xA1DUZ*#\\^L&"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"=W"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4200",
		"value":"4169"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"org.jsecurity.sping.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\"|&|ebJ#Uy}$h"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"iUq&i-lZvt)HXjD?"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Content-Length"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Unreached characters at end of expression.  Please report this bug!"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4200",
		"value":"4199"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1595"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"B,1L87p7"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":">fC7f<}t",
		"value":">fC7f+<}t"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"304",
		"value":"252"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3799"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"&"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1317"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"70",
		"value":"55"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"347"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2006"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"@w}V%FxtH\\x1-)",
		"value":"@w}V%@FxtH\\x1-)"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"nf70@",
		"value":"nf7_0@"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3335",
		"value":"-3319"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"z)PBM,^S\\Qy^YFJ>"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2147483647",
		"value":"-2147483626"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"&Xm, LSSBdwyx7?"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"659"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Mapped value [",
		"value":"Mapned value ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"322",
		"value":"298"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":",1$kL7|p1Gbr"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"-1.86774"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Connection was closed in SingleConnectionDataSource. Check that user code checks shouldClose() before closing connections, or set suppressClose to true"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1966",
		"value":"-1953"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"BeanPostProcessors (for example: not eligible for auto-proxying)",
		"value":"BeanPostProcessors (forexample: not eligible for auto-proxying)"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"_V41"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"686"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2368"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"nlreD1H8"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-242"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-793",
		"value":"-803"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"314"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"ENUM",
		"value":"SHORT"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.aop.support.UnionPointcut"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"168",
		"value":"171"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"223"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2253"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2421"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Invoking commit for transaction on ",
		"value":"Ivoking commit for transaction on "
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"12"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-5"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"DOUBLE",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"309",
		"value":"325"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"~HF4XS/S#tm?rP`#"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2534",
		"value":"-2516"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\"h(Axa^"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1520",
		"value":"1512"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-343",
		"value":"-324"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"z!GaT"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1171",
		"value":"1197"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-2453.307"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"X2y1 QQ"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"I>-3EX3f$wz408W"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":">r@*m!9l/2xC0}",
		"value":">r@*!9l/2xC0}"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1841"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"847"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"789"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
			"lineNo":91,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I6 Branch 3 IFNONNULL L91",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.springframework.util.Assert",
			"lineNo":89,
			"methodName":"notNull(Ljava/lang/Object;Ljava/lang/String;)V",
			"stringValue":"I3 Branch 4 IFNONNULL L89",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nAuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor0 = new AuthorizationAttributeSourceAdvisor();\nauthorizationAttributeSourceAdvisor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"yI",
		"value":"y\\I"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":")"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"An authorizer must be configured if no security interceptor is explicitly configured.",
		"value":"An authorizer must be configured if no security interceptor is expliciTtly configured."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"<"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1457",
		"value":"-1458"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":".4bR/(,:G;fyhZ8:k"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"5",
		"value":"-8"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Lazy initialization is only applicable to singleton beans",
		"value":"Lazy initialization is only applicable to singleton bans"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3428"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"41"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"445",
		"value":"457"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-5"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttribOuteSourceAdvisor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"m"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"199"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-3616.01",
		"value":"-3615.772"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1658"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}g:X"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"786",
		"value":"779"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"278"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":" "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Cv='+'d<d=Xv"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1.0",
		"value":"-11.04886"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"o6\u007F0FUU"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2529",
		"value":"-2523"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-34"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"F#)o,+h"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]83|9S1X+`sif+}9D,\\"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"qWHVr("
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2529",
		"value":"-2517"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"c)>u"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"]; breaking interceptor chain"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1495"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"oZj]\\NB\"},0-[:"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"355"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2228",
		"value":"-2237"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"10"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-618"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"+Xvv\u007F6asMSuMf{'*3iy"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"22",
		"value":"44"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"SFSza%"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-924"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1664"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}Jv#9dTX~\":lA"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"91",
		"value":"77"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"10"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"EYs4E['FB&dD0V="
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"!CysbX!s|1[(G9r*/*:"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"QlR<Va?GP0",
		"value":"QlR<Va?P0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Factory method '",
		"value":"Factory method &'"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"y\"~Yt~_,%15QG89|8j2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2055"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2093"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-29"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"618"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3242"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1373",
		"value":"1374"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"IJL/%21@b+K",
		"value":"IJ/%21@b+K"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1500"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"111"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"610"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"13",
		"value":"18"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"5,#aL6"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Otw$",
		"value":"tw$"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-46"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1395.4745"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1695"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"= )fJXS| -(n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"143"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"874",
		"value":"883"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"[t${D88LT3"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1130"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3867"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1072"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-69"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"storeToXML"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Yiw"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"'H"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2679"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-809"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1006.2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"455"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]j>pd"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"An authorizer must be configured if no security interceptor is explicitly configured."
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-836"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.springframework.aop.framework.Cglib2AopProxy$CglibMethodInvocation"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"hVT'wS\""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Qz"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"<(,2{_mroR/"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"SecurityContext cannot be loaded.",
		"value":"SecurityContext cannot be loaded."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"!jq",
		"value":"!q"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"t<F3.hh#N%"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"v4~0^{u2~3,Lm{uF"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-8"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"mK01nk=XxP0)`o"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3367"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"2158.9578",
		"value":"2158.9578"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2958"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1880",
		"value":"1911"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"a';pNMSx(Qt",
		"value":"a';pNMSxQt"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"\u007F.?'m]J=?.",
		"value":"\u007F.?'m]J?."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"2367.827"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1",
		"value":"-1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"902.30414"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"_=BxXmxy^"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":">CvM$S6yHRP;[h,/W"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":",i5VL8iz,46^3rnSN",
		"value":",i5VL8iz,66^3rnSN"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2025",
		"value":"-2025"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"class was found configured in the system.  The accessor ",
		"value":"class was found configured in the system.  The accessor "
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"c<G!2X",
		"value":"D<G!2X"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"mA)Y+Uac)hL0wf z{%a"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-916",
		"value":"-893"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"S$<Le}!bJQN=PV,O"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"hW!4EW`a,!O=V^yRs"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]8/;U(`H"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3(Gn41x"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":" yoO"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"741"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-1761.666",
		"value":"-1761.666"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"900"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"69"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Znz`A"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1",
		"value":"-23"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3370",
		"value":"-3372"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1024",
		"value":"1013"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"g"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-39",
		"value":"-47"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"123.969",
		"value":"122.45179"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1057.3"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"-"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1992"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1361",
		"value":"1370"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":":Gk6hf;c`w"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1585"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"$[zb}{j",
		"value":"$[zb}{i"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"46"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"3"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Q%,>@0u($QF)",
		"value":"Q%,>A@0u($QF)"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"*O?6cl@kfb[|F:",
		"value":"*O?6cl@kf[|F:"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"e"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Ba,\"7&(["
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"a"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"793"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"'.i;Ci\")X#&({Ua",
		"value":"'.i;Ci\")X&({Ua"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"44m1gDnoe<;M"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"649"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"] implementation ",
		"value":"] impleme^ntation "
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"B"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"v_,Sj4Xqu/tA-8"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"&4!Qh"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-234"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1478"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3925"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nint int0 = 530;\nInteger integer0 = new Integer(int0);\nint int1 = 1478;\nInteger integer1 = new Integer(int1);\nString string0 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) integer1;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) integer1;\nobjectArray0[5] = (Object) string0;\nobjectArray0[6] = (Object) method0;\nClass<String> class0 = String.class;\nint int2 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int2);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer1, string0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethod method1 = null;\nObject[] objectArray1 = new Object[0];\nClass<String> class1 = String.class;\nint int3 = (-1052);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int3);\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object0, integer0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"46",
		"value":"23"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"13"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"_-9"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"gIV:4-oQv'@Ka"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] is "
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"198",
		"value":"187"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"'9"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"16"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1023"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"u"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1046",
		"value":"1062"
	},
	"EndSeed"
][
	"Events",
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"21",
		"value":"33"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"cannot be created."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"=\u007F8S)Y_"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"46"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-656"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"?"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":" <"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"69"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"nJp-68Lx\"Jf<0n{@x"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"["
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nString string0 = \"target is null\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) string0;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) securityPermission0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) securityPermission0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, securityPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nString string0 = \"target is null\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) string0;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) securityPermission0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) securityPermission0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, securityPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"543"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":")lqez0N*Rf1%8kZ>Kn"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"]- A+T+\"jL)",
		"value":"]- A+T+\"jL)"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#tTu{pbG"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"]",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"o"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-25"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"16",
		"value":"32"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1755.843",
		"value":"1754.4229"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"9A\u007F\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nint int0 = 0;\nfloat float0 = 0.0F;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nLinkedList<String> linkedList0 = new LinkedList<String>(linkedHashSet0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedList0, linkedHashSet1);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"9A\u007F\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nint int0 = 0;\nfloat float0 = 0.0F;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nLinkedList<String> linkedList0 = new LinkedList<String>(linkedHashSet0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedList0, linkedHashSet1);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.apache.commons.logging.simplelog.dateTimeFormat",
		"value":"org.apache.commons.loggng.simplelog.dateTimeFormat"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":")UQbk$w&Lko0",
		"value":")UQbk$w&Lgko0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1",
		"value":"org.jsecurity.spring.^security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"EC "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"V81Hp,9"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"0."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-580"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nObject object0 = null;\nObject object1 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = object0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nint int0 = 25;\nfloat float0 = 0.0F;\nLinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet0);\nint int1 = 4006;\nObject object2 = new Object();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string0 = \"\";\nString string1 = \"associated with this authorization context.\";\nMethod method1 = null;\nSpliterator<Integer> spliterator0 = linkedHashSet0.spliterator();\nObject[] objectArray1 = linkedHashSet0.toArray(objectArray0);\nObject[] objectArray2 = new Object[2];\nobjectArray2[0] = (Object) string0;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nobjectArray2[1] = (Object) method1;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Integer> linkedList1 = new LinkedList<Integer>();\nSpliterator<Integer> spliterator1 = linkedList1.spliterator();\nObject[] objectArray3 = linkedList1.toArray();\nInteger integer0 = linkedList1.pollFirst();\nString string2 = reflectiveMethodInvocation0.toString();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string0, string1, method1, objectArray2, class1, linkedList1);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation1.invocableClone();\nInteger integer1 = linkedList1.removeFirst();\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nInteger integer2 = linkedList1.pollFirst();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizationContext authorizationContext0 = null;\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(authorizationContext0, authorizedAction0);\nString string3 = reflectiveMethodInvocation0.toString();\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object10 = authorizationInterceptor0.invoke(methodInvocation1);\nboolean boolean0 = linkedList1.removeAll(linkedHashSet0);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = new Object();\nObject object13 = reflectiveMethodInvocation1.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string4 = reflectiveMethodInvocation1.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = reflectiveMethodInvocation1.proceed();\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nboolean boolean1 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nModularAuthorizer modularAuthorizer3 = new ModularAuthorizer();\nint int2 = (-3782);\nboolean boolean2 = linkedList0.addAll(int2, (Collection<?>) linkedHashSet0);\nString string5 = reflectiveMethodInvocation0.toString();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object20 = new Object();\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object22 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation2 = null;\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation3 = null;\nObject object26 = authorizationInterceptor0.invoke(methodInvocation3);\nObject object27 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer4 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nObject object28 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nObject object29 = authorizationInterceptor0.invoke(methodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object30 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer5 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer5.setAuthorizationModules(linkedHashSet1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer5);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer3);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1250"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1355.0"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"7.3727646"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3952",
		"value":"3970"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"118"
	},
	"EndSeed"
][
	"Events",
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-236",
		"value":"-250"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1773.67"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"oq{?]:V"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"VpIi#y22mF7qhEsJ"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nString string0 = \"oq{?]:V\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nString string1 = \"VpIi#y22mF7qhEsJ\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) authorizationContext0;\nobjectArray0[2] = (Object) string0;\nobjectArray0[3] = (Object) authorizationContext0;\nClass<Object> class0 = Object.class;\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>();\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, string1, method0, objectArray0, class0, linkedList1);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"~aW5P>",
		"value":"~aW5P"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"5W*V;E'^?IFp[&",
		"value":"5W*V;E\"'^?IFp[&"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"76"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"142",
		"value":"161"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"8"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"2"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"147.69",
		"value":"147.69"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"O@5t`",
		"value":"O@5t^`"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"$$BC5_P",
		"value":"$$BC5P"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"p91/CI/`fZ_~h"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"40000"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Level deserialization failed, reverting to default."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = 40000;\nInteger integer0 = new Integer(int0);\nString string0 = \"Level deserialization failed, reverting to default.\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) jMXPrincipal0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nClass<Object> class0 = Object.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nLinkedList<Object> linkedList1 = new LinkedList<Object>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, jMXPrincipal0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string1 = null;\nString string2 = \"\";\nAllPermission allPermission0 = new AllPermission(string1, string2);\nObject[] objectArray1 = new Object[6];\nobjectArray1[0] = (Object) modularAuthorizer0;\nobjectArray1[1] = object2;\nobjectArray1[2] = (Object) allPermission0;\nobjectArray1[3] = (Object) jMXPrincipal0;\nobjectArray1[4] = (Object) authorizationInterceptor0;\nobjectArray1[5] = (Object) reflectiveMethodInvocation0;\nClass<JMXPrincipal> class1 = JMXPrincipal.class;\nLinkedList<Object> linkedList2 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(serializablePermission0, allPermission0, method0, objectArray1, class1, linkedList2);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"AmR",
		"value":"AmR"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1376"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2686"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-970"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = (-2686);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = (Object) integer0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nList<Integer> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"AmR",
		"value":"AR"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1812"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2400",
		"value":"-2429"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"21"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"57"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-2636.8003"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"906"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":":7o{m:^sq'(p"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1428"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"e3/?dmP5@$qY*3Q"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"key cannot be null"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"yBKP!Kxf#I\\~*iH"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"354"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"S"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\"N(PX`"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1249"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"221"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] constructor could not be "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-324"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"108.41"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"110"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"hds$w"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"147.69",
		"value":"143.83815"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"116"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1719.5"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"38"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2389"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-164"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"q+;]NCO[oWt|PHq"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"DS+[mTq#ril}1/c"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"25"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-998.83856"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";b5|<<{QhgYUp"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"161"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\u007F6"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \";b5|<<{QhgYUp\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nClass<Object> class0 = Object.class;\nint int0 = 161;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedHashSet0);\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-100"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"q }$rUD1&^o_#L^"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"sH)"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.getName();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nObject object0 = null;\nString string2 = \"q }$rUD1&^o_#L^\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string1;\nobjectArray0[1] = (Object) realm0;\nobjectArray0[2] = (Object) jMXPrincipal0;\nobjectArray0[3] = object0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) realm0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string2, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h[-d\u007FSX"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"W"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Z7)X]2h"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1455"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"Z7)X]2h\";\nint int0 = (-1455);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object0 = new Object();\nobjectArray0[0] = object0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nObject object1 = new Object();\nobjectArray0[2] = object1;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) modularAuthorizer0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, integer0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-908"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nAuthorizationContext authorizationContext0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(authorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer0.setAuthorizationModules(set0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"info"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"BpVVO<$M9q%9`CA"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":".1zb)kYpBSe2i"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-992"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"27"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-134"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-400.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"614"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4978"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1558"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList1);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1598"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"858"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"38"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"88"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"39"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"n|=1:12+"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"SHH}"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"4065"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1412.97"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2496"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Sv3KGF\"+YI^p"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"340"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"344"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3085"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"522.804"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"82"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"15"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-169"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2362"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"3266.3"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1249",
		"value":"1203"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"W(qXs?`\u007F"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"4D/e\\kT_AKm,-,N@"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"I[>D^"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2404"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"124"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":")uvR3'HL#Q#\u007F!\"xW"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"5'MLX5h$*b"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"|5Yj3RghNT~O;\\1&"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"^5U0#X E1nIn%N6t=:",
		"value":"^5U0#X E1lIn%N6t=:"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"117"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3417"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"8. hG,0p$;pu61",
		"value":". hG,0p$;pu61"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"f[ztu@Y",
		"value":"f[ztu?@Y"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Ad,]j)`sTsLB"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"186"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1600",
		"value":"1537"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-1.0",
		"value":"-1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-11"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3193"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"??N9eZO[9CoUJ0fL[1#"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"PY"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"23"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"s"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"=5UUY6hSv{",
		"value":"=5UUY6hSv{"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"wRx}9_^\u007F"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"pZ2[V9`",
		"value":"rZ2[V9`"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"M#"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-311"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";6Sj: c:iI\\s|b"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}t9OEBCy:}D'..y}C T"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"from thread ["
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"50"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-25"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"H"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"N"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.ri.util.ThreadContext"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"cbYHsf"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"E~wqo?vx~`>[i9"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"aZw&lh"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"F^|Jf_V"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2663"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2631"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"/$|GyrhPFxVsU.9l",
		"value":"/$|GyrhFxVsU.9l"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"[DEBUG] ",
		"value":"[DBUG] "
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"11.656919"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3426"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Removed all ThreadContext values"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-11"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"22",
		"value":"-2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4527"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"O-}",
		"value":"O-}"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"in?hi~o'Qg"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"t%t #O[|s7]FbumNF_"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2656"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1803"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3+|%;T"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"from thread ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"16"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":":"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"D7\"ZrmC"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"155"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"i8uJNOAh^@#"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation1 = null;\nString string0 = \"i8uJNOAh^@#\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nCollection<Permission> collection0 = null;\ndelegatingAuthorizationContext0.checkPermissions(collection0);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"(^M-RS0bxE",
		"value":"(^-RS0bxE"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1281.0",
		"value":"1281.9202"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"32"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";5M1bPD/d.aL(?R{["
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-32"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4579",
		"value":"4586"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"-i(n4D"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"383"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"nDqT6t\\f\u007F}%-U3Z"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"969"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"4"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.simplelog.showdatetime"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-206"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2622"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"{iR3e,`gHL!UM,"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.authz.AuthorizationException"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1948.4421"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2310"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"1pu.8a_J"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"ca[<@nhAj#!Cgh"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-895"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Context does not imply permission ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Implies permissions:"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Wf2j+zR1X-H#`pa3"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-167"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"2452.67"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2338"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"5956"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-247"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1065"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3044"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"80"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"V1OzV-7ng"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"761"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2522"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3154"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"b\u007Fw2"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"w"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"32"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"uNWIR'5pX4"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"uNWIR'5pX4\";\nSecurityPermission securityPermission0 = new SecurityPermission(string0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nobjectArray0[2] = (Object) modularAuthorizer1;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) authorizationInterceptor0;\nobjectArray0[6] = (Object) string0;\nClass<Annotation> class0 = Annotation.class;\nList<Annotation> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(securityPermission0, object0, method0, objectArray0, class0, list0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"st68yZdhrEGc+YL7I"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#B=s4Wr/LuY"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"253"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h5Qg,2Oa4"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"d$}G$(8G:U"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] constructor could not be "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"687"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"n[;@p;q3/QP|e\\`"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2409"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"B\""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"k2"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"t%t #O[|s7]FbumNF_",
		"value":"t%t #O[?|s7]FbumNF_"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"k[5 ;Ti9L#mfSYxi"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1169"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"A"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"14"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"945"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-793"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"286.9"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"155",
		"value":"147"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3687"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Sh_[v<|v"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.impl.SLF4JLogFactory"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"7"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"32"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"QE}Z^5Gs^qw"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"'t"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"69"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"%4[O`9=%!\\X/#!;~n8"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] implementation "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":".CUrV%1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \".CUrV%1\";\nString string1 = \"\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<Object> class0 = Object.class;\nint int0 = 0;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int0);\nLinkedHashSet<SecurityPermission> linkedHashSet1 = new LinkedHashSet<SecurityPermission>(linkedHashSet0);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, allPermission0, method0, objectArray0, class0, linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation1 = (ReflectiveMethodInvocation)reflectiveMethodInvocation0.invocableClone();\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"(>S&ja5=L$O020HHc|"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"j"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"6?M/ ;a-"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"15"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"3"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"+N Ss :3c;]"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h5jEAs?G\u007F90XNgA"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3208"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-609.44"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"69"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.impl.NoOpLog"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"O`%kvugT^[&+P@pG"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\"g=J{FtFg-#o6"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"AF~3%[BH@"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"9mBo?RwIX.s ^RPWJaT"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3M_qd"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"~[o*oy)"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"|N/M=dBvI,<"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1101.722"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1477"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1514.1859"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"394"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"57"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-821.18"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"<zWqO1{mp~"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"trace"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.impl.Log4JCategoryLog"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"abstain"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] implementation "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"155",
		"value":"172"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"jsecurity.properties"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"213"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"oc4%p&>^f+Ma2\u007FidP"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"fatal"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"60"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1880"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"76"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1355"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-129"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Permission> class0 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"J$#A'ce$u?hcTtb\\B7^"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\\zd2"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"16"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"955"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"NxK,W#e#OI@\"rsK"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"QbcX=/ P|:dW[poU|["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4156"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-468"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"H$<Qp\"i>a`Y/Rem%+L"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nString string0 = \"H$<Qp\\\"i>a`Y/Rem%+L\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = objectArray0[3];\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) string0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nobjectArray0[8] = (Object) modularAuthorizer0;\nClass<Integer> class0 = Integer.class;\nLinkedList<Object> linkedList0 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.impl.AvalonLogger"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"182"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"d*F(-i7}o\"hb}~?"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1374.5527"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"114"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"85"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1803.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"w\u007Fp'F1m1=H"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"240.7435"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"94"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"p{CyW)~/yvu/ALA2"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"N6FMIg)`KG.^X}d:<"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-291"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"zHD?}x_H\\7/2m.4RTd"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"2!2KXzJy+l-pxt7D{mP"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1740"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1137.8441"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"? +"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"433"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h]n3x3^4fwu:b~>NaOA"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.impl.AvalonLogger"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"1?f\u007F]|L<>5F\"N$50Ft)"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"2999.4"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\\"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"P3'{}fW!:we"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nAuthorizationInterceptor authorizationInterceptor1 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor1.invoke(methodInvocation0);\nboolean boolean0 = linkedList0.remove(object0);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean1 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"~v;!.jJrU#xa"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"c_"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"1024"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"L@>yUVRC*r`\"jhk*[>i"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1033"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"TU&P2|"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"5(0DH"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"N`;i0\u007FrV*EZ:j*6/L}~"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"CT'V89n{P24"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"iG)D,]0(a\\f'peJ"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1205"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"4757"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"6w\""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"No^$zaQ,L@` Mm;vCO"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"2D2>~]d"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"307"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"XEDT#<NR"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"UQ2IVLG?z>zT%*@*\"u3"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"6V{8LMw$_\\*8hx>`5P`"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"16"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1166.1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"t[%"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"98"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"40000"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"16",
		"value":"-8"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2623",
		"value":"-2623"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"430"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":":R#zL",
		"value":":R#{L"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1618",
		"value":"1599"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"w?1H%G,zT=!?"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.context.SecurityContextException"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"69",
		"value":"62"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"?j.8V",
		"value":"?i.8V"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"ij\"]E=IM>cf"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-5100"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"a5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"698"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"58"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"B`GBV}[_fpkH$"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"?j.8V",
		"value":"?.8V"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"85",
		"value":"62"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]*hHt+f!E"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"z*CV9]E/"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1453.798"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"F"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"~~f(tX#"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3879",
		"value":"-3878"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"s"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"76",
		"value":"62"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1766"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-10"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"toLevel"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"135"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1",
		"value":"9"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-2347.0835"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#a["
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"38"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"[!5}8"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Tde,:V+/lCAd+5Vh",
		"value":"Tde,:V+/lAd+5Vh"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"EF]NAg wj1F`VI@~#"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"6Q']yc0i?I"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"zix?A&\"LoE(Pu3<T{3"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"(HH",
		"value":"(H"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3623",
		"value":"3653"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"<*xzQc^1o\u007FUJtI{I[",
		"value":"<*xzQc^1o\u007FUJtI{I]"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"O"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"tg_cVOtijH1wwi]"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"?c70&\u007FI:",
		"value":"?c7b0&\u007FI:"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2477"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3130"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"t~2MYhAu77Yp"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"5\u007F9"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] constructor could not be "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"S&)YhA~F\\v"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"42",
		"value":"46"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"cQ$me|)`"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"KAv='Ra",
		"value":"KAv'Ra"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"i!/"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"true"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"13",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.aopalliance.aop.AspectException"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1697"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"156"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"I]hI2*^g%}*WM"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"6gBN-$mVB,Wn"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"34"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"nfjWWlw'\\hLzFZ`KM",
		"value":"nfjWWlw'^hLzFZ`KM"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"753"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2153"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1163",
		"value":"1154"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"0.9045808"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"37"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-505"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"<*xzQc^1o\u007FUJtI{I[",
		"value":"<*xzQc^1o\u007FUJtI{I[u"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"?j.8V",
		"value":"?j?.8V"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":".<",
		"value":"-<"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"257",
		"value":"241"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"V<#L)l9pS2e%3/"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-4"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1149.3658",
		"value":"1149.9952"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"v"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"LWLpYi\\CM"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]p7Sj>N"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"LWLpYi\\\\CM\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = \"]p7Sj>N\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nMethod method0 = null;\nObject[] objectArray0 = new Object[4];\nobjectArray0[0] = (Object) string0;\nobjectArray0[1] = (Object) jMXPrincipal1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nint int0 = 1186;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nString[] stringArray0 = new String[0];\nString[] stringArray1 = linkedHashSet0.toArray(stringArray0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Object> linkedList0 = new LinkedList<Object>(linkedHashSet1);\nLinkedHashSet<JMXPrincipal> linkedHashSet2 = new LinkedHashSet<JMXPrincipal>();\nboolean boolean0 = linkedHashSet0.addAll(linkedHashSet2);\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet2);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal0, jMXPrincipal1, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"\";\nString string3 = \"org.apache.log4j.Layout\";\nAllPermission allPermission0 = new AllPermission();\nString string4 = \"+NbD3fM|La\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string4);\nSubject subject0 = new Subject();\nboolean boolean2 = jMXPrincipal2.implies(subject0);\nallPermission0.checkGuard(jMXPrincipal2);\nboolean boolean3 = linkedHashSet1.contains(allPermission0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal1, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean4 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>();\nComparator<Object> comparator0 = null;\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet3 = new LinkedHashSet<AuthorizationModule>(int0);\nboolean boolean5 = linkedList1.addAll((Collection<? extends AuthorizationModule>) linkedHashSet3);\nlinkedList1.sort(comparator0);\nLinkedHashSet<AuthorizationModule> linkedHashSet4 = new LinkedHashSet<AuthorizationModule>(linkedList1);\nint int1 = (-2999);\nLinkedHashSet<Object> linkedHashSet5 = new LinkedHashSet<Object>(int1);\nboolean boolean6 = linkedHashSet4.containsAll(linkedHashSet5);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object9 = new Object();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1568"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"4875.8794"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]2u9wc"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-292.01",
		"value":"-293.59995"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"R\\g=@w8\\Tzx6h.u",
		"value":"R\\g=@w\\Tzx6h.u"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"getContextClassLoader"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"!SJ"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"pe/.:z\u007FM,|CD"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"G"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nString string0 = \"pe/.:z\u007FM,|CD\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction0 = null;\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"H\u007FH_<oeVg&aZj\\?r;ov"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"pE_mR`K"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"882"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2559"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"42"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2856"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1186",
		"value":"1183"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3574"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"OY21",
		"value":"OY2b1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"30"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-41"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"++Z1",
		"value":"+++Z1"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2742"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"19uE!9% ",
		"value":"19E!9% "
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"76",
		"value":"83"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1698"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"142"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"m_"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.simplelog.defaultlog"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"``nZ"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"9jv,^WDx-Oc'!E5em",
		"value":"9jv,^WDx-Oc'\"E5em"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"QHk1ZBT[1zW"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"360",
		"value":"326"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-9"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1604"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2736"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1462"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"808"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1158",
		"value":"-1173"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"i^%\\fe\\?SF5[#eK"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"wraPP?Rc6pE"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"-1"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"2255.8792",
		"value":"2255.9"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Implies permissions:"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Zd?o:"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4304",
		"value":"4339"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\"%%-]\\z#qq3+k~VW"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Q_TOqs&ECzs"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"WA{24a\\/fS|YhvH?=%q"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Detected IBM VisualAge environment.",
		"value":"Detected IBM VisualAge environoent."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"@oLB~,(a$"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"@]ds5y-.K]t5Q"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Method invocation [",
		"value":"Method invocatio ["
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"4866.69",
		"value":"4866.69"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2563"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"40"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"811.0615"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-989"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"']aI[sg[J6#"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"s5>__\\OW,w#!!y:$"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-913.5597",
		"value":"-913.5597"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"miuH{oz`:YR"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-5227",
		"value":"-5210"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#O"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Mocr5",
		"value":"Moc5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2105"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":">D9FF",
		"value":">D9FF"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.log4j.helpers.AppenderAttachableImpl"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"V",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"target is of class ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"2786.0168"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1452"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"q"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"^#LAb"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[15];\nobjectArray0[0] = (Object) method0;\nobjectArray0[1] = (Object) modularAuthorizer0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) authorizationInterceptor0;\nobjectArray0[4] = (Object) authorizationInterceptor0;\nobjectArray0[5] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[6] = object1;\nClass<Object> class0 = Object.class;\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedList<AuthorizationModule> linkedList1 = new LinkedList<AuthorizationModule>(linkedList0);\nint int0 = 1619;\nfloat float0 = 0.0F;\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nMethodInvocation methodInvocation0 = null;\nObject object2 = authorizationInterceptor0.invoke(methodInvocation0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = null;\nObject object4 = authorizationInterceptor0.invoke(methodInvocation1);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nString string0 = null;\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nString string1 = jMXPrincipal0.toString();\nRealm realm0 = null;\nObject object5 = linkedList0.clone();\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nObject object6 = reflectiveMethodInvocation0.proceed();\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nlinkedHashSet1.clear();\nboolean boolean1 = linkedHashSet1.removeAll(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nObject object7 = new Object();\nint int1 = 46;\nAuthorizationModule authorizationModule0 = null;\nPermission[] permissionArray0 = new Permission[1];\npermissionArray0[0] = (Permission) serializablePermission0;\nPermission[] permissionArray1 = linkedHashSet0.toArray(permissionArray0);\nlinkedList0.add(int1, authorizationModule0);\nObject object8 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object11 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(methodInvocation2);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList2 = new LinkedList<Principal>();\nboolean boolean2 = linkedList2.containsAll(linkedHashSet0);\nStream<Principal> stream0 = linkedList2.parallelStream();\nDelegatingAuthorizationContext delegatingAuthorizationContext1 = new DelegatingAuthorizationContext(linkedList2, realm0);\nClass<String> class1 = String.class;\nPrincipal principal0 = delegatingAuthorizationContext1.getPrincipalByType(class1);\ndelegatingAuthorizationContext1.checkPermission(serializablePermission0);\nboolean boolean3 = modularAuthorizer1.isAuthorized(delegatingAuthorizationContext1, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object14 = authorizationInterceptor0.invoke(methodInvocation1);\nAuthorizer authorizer1 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer1);\nObject object15 = new Object();\nString string2 = \"] system property or manually including a jsecurity.properties file \";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string2);\nObject[] objectArray1 = new Object[1];\nobjectArray1[0] = (Object) authorizer0;\nClass<Permission> class2 = Permission.class;\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(object15, jMXPrincipal1, method0, objectArray1, class2, linkedList1);\nString string3 = jMXPrincipal1.getName();\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object18 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object19 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object20 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object21 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object23 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nObject object24 = authorizationInterceptor0.invoke(methodInvocation2);\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"NDaGnv*FV`wpPMG",
		"value":"NDaGnv*FV`wpPM)G"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1926.0",
		"value":"1925.3153"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"accessed.  SecurityContext cannot be loaded."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.apache.log4j.Layout",
		"value":"org.apache.log4l.Layout"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"zh"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] constructor could not be "
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"0.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"38"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"38"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"118"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"debug"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Accessor class ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Ph;9/wf5(|IEFS#(v`"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"`"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-47",
		"value":"-58"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"I|ksx"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"fO)~qRk~ zKgx Y"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"*Ts@h-px/@"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"568"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"User is not authenticated.  No AuthorizationContext available via ",
		"value":"User is not authenticated.  YNo AuthorizationContext available via "
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-40"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"g8<L BJVNnl)K:",
		"value":"g8<L BJVPnl)K:"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] for key ["
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"C\u007F}_sKk'{g=j1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#dr!/43TA8w"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"198"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"$i2~M"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"S%YId4:s<UZ"
	},
	"EndSeed"
][
	"Events",
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1723"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"o|X]p00nB5Gv \u007FL"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"-)D<-oW^o"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nString string0 = \")\\\"ml&J8Cz2[^Oy3L%A\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) string0;\nObject object1 = new Object();\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nCollection<Integer> collection0 = null;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nString string1 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string1);\nint int0 = 32;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 12;\nfloat float0 = 0.0F;\nLinkedHashSet<Permission> linkedHashSet1 = new LinkedHashSet<Permission>(int1, float0);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>(linkedHashSet1);\nLinkedHashSet<Permission> linkedHashSet2 = new LinkedHashSet<Permission>(linkedList1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(jMXPrincipal0, linkedHashSet0, linkedHashSet2);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer1.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Sh5XN<Z))LE]ImRGRX"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-298"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Vq.]y>`3@DX`!}*:SH"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"%i6<S%U"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"\"."
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nint int0 = 2853;\nfloat float0 = (-3837.9F);\nString string0 = \"gkW]J9id(QO7qXEpE>\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nboolean boolean0 = linkedHashSet0.remove(jMXPrincipal0);\nLinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>(int0);\nString string1 = \"\\\".\";\nJMXPrincipal jMXPrincipal1 = new JMXPrincipal(string1);\nObject object0 = new Object();\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<Integer> class0 = Integer.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>(linkedHashSet1);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(jMXPrincipal1, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nString string2 = \"%i6<S%U\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method1 = null;\nObject[] objectArray1 = new Object[3];\nobjectArray1[0] = (Object) string0;\nobjectArray1[1] = (Object) linkedHashSet1;\nobjectArray1[2] = (Object) string2;\nClass<String> class1 = String.class;\nLinkedList<Object> linkedList1 = new LinkedList<Object>();\nReflectiveMethodInvocation reflectiveMethodInvocation1 = new ReflectiveMethodInvocation(string2, serializablePermission0, method1, objectArray1, class1, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation1);\nLinkedList<Integer> linkedList2 = new LinkedList<Integer>();\nLinkedHashSet<Integer> linkedHashSet2 = new LinkedHashSet<Integer>(linkedList2);\nboolean boolean1 = linkedHashSet0.retainAll(linkedHashSet2);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nAuthorizationModule authorizationModule0 = null;\nboolean boolean2 = linkedHashSet0.add(authorizationModule0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object3 = null;\nString string3 = \"Authorization will be denied.\";\nString string4 = \"\";\nAllPermission allPermission0 = new AllPermission();\nMethod method2 = null;\nObject[] objectArray2 = new Object[6];\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[7];\nSpliterator<Integer> spliterator0 = linkedList2.spliterator();\nString string5 = \"\";\nJMXPrincipal jMXPrincipal2 = new JMXPrincipal(string5);\njMXPrincipalArray0[0] = jMXPrincipal2;\nString string6 = \"org.apache.commons.logging.simplelog.showdatetime\";\nJMXPrincipal jMXPrincipal3 = new JMXPrincipal(string6);\njMXPrincipalArray0[1] = jMXPrincipal3;\nString string7 = \"\";\nJMXPrincipal jMXPrincipal4 = new JMXPrincipal(string7);\njMXPrincipalArray0[2] = jMXPrincipal4;\nString string8 = \"[xC8S%:Oxl}E8v\";\nStream<Integer> stream0 = linkedHashSet2.stream();\nJMXPrincipal jMXPrincipal5 = new JMXPrincipal(string8);\njMXPrincipalArray0[3] = jMXPrincipal5;\nString string9 = \"b'jpLXBHB#\";\nJMXPrincipal jMXPrincipal6 = new JMXPrincipal(string9);\nSubject subject0 = new Subject();\nboolean boolean3 = jMXPrincipal2.implies(subject0);\nint int1 = 2005;\nInteger integer0 = new Integer(int1);\nboolean boolean4 = jMXPrincipal6.equals(integer0);\nString string10 = jMXPrincipal3.toString();\nSet<Principal> set0 = subject0.getPrincipals();\njMXPrincipalArray0[4] = jMXPrincipal6;\nString string11 = \"Cug\";\nJMXPrincipal jMXPrincipal7 = new JMXPrincipal(string11);\nString string12 = jMXPrincipal3.getName();\njMXPrincipalArray0[5] = jMXPrincipal7;\nString string13 = jMXPrincipal6.toString();\nClass<Object> class2 = Object.class;\nSet<Object> set1 = subject0.getPrivateCredentials(class2);\nString string14 = jMXPrincipal7.toString();\nObject object4 = new Object();\nString string15 = jMXPrincipal4.getName();\nboolean boolean5 = jMXPrincipal6.equals(object4);\nboolean boolean6 = jMXPrincipal6.implies(subject0);\nString string16 = \"S*h5vl\";\nJMXPrincipal jMXPrincipal8 = new JMXPrincipal(string16);\nString string17 = jMXPrincipal8.getName();\nString string18 = jMXPrincipal7.getName();\njMXPrincipalArray0[6] = jMXPrincipal8;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet1.toArray(jMXPrincipalArray0);\nobjectArray2[0] = (Object) modularAuthorizer0;\nobjectArray2[1] = (Object) method2;\nString string19 = jMXPrincipal3.getName();\nobjectArray2[2] = (Object) linkedHashSet2;\nObject object5 = new Object();\nobjectArray2[3] = object5;\nobjectArray2[4] = (Object) linkedHashSet0;\nint int2 = 22;\nint int3 = 0;\nInteger integer1 = new Integer(int3);\nallPermission0.checkGuard(integer1);\nInteger integer2 = new Integer(int2);\nallPermission0.checkGuard(integer2);\nobjectArray2[5] = (Object) modularAuthorizer0;\nClass<Object> class3 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation2 = new ReflectiveMethodInvocation(object3, allPermission0, method2, objectArray2, class3, linkedList2);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object9 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object10 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object11 = reflectiveMethodInvocation2.proceed();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object13 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object14 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(jMXPrincipal0, realm0);\nLinkedList<String> linkedList3 = new LinkedList<String>();\nboolean[] booleanArray0 = delegatingAuthorizationContext0.hasRoles(linkedList3);\nAuthorizedAction authorizedAction0 = null;\nmodularAuthorizer1.checkAuthorization(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object15 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nObject object16 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nString string20 = \"Vq.]y>`3@DX`!}*:SH\";\nJMXPrincipal jMXPrincipal9 = new JMXPrincipal(string20);\nClass<String> class4 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation3 = new ReflectiveMethodInvocation(object16, jMXPrincipal9, method2, objectArray2, class4, linkedList2);\nMethodInvocation methodInvocation0 = reflectiveMethodInvocation3.invocableClone();\nObject object17 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object18 = authorizationInterceptor0.invoke(reflectiveMethodInvocation3);\nObject object19 = new Object();\nObject object20 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object21 = authorizationInterceptor0.invoke(methodInvocation0);\nint int4 = 0;\nInteger integer3 = new Integer(int4);\nint int5 = 0;\nInteger integer4 = new Integer(int5);\nClass<String> class5 = String.class;\nReflectiveMethodInvocation reflectiveMethodInvocation4 = new ReflectiveMethodInvocation(integer3, integer4, method2, jMXPrincipalArray0, class5, linkedList3);\nObject object22 = authorizationInterceptor0.invoke(reflectiveMethodInvocation4);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object23 = new Object();\nObject object24 = new Object();\nObject object25 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nObject object26 = authorizationInterceptor0.invoke(reflectiveMethodInvocation2);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"6/rl3e;o-0_^;(1",
		"value":"6/rl3e;-0_^;(1"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3222"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1662"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"958"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}sLy6nmlX`4Hx}"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"1300",
		"value":"1291"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":" _1M/P#a?WZJ",
		"value":" _1M/P#a?WZJ"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"\\jQ6",
		"value":"\\Q6"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"720"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\\aR>"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"gp1ra~:%SmQ?+[-"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2359",
		"value":"2349"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"78",
		"value":"75"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-6"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"143",
		"value":"121"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"$"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"[TRACE] ",
		"value":"[TRAiCE] "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"java.lang.Thread"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"debug",
		"value":"debg"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3311"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"/m53TJnLl|}"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"25"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"-9.93824"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"187"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1.0",
		"value":"0.9491323"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"32"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2359",
		"value":"2377"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"authorizer property must be set",
		"value":"authorizer roperty must be set"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2957"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"3518.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"U"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1131"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-1.0",
		"value":"0.32335317"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.log4j.spi.ThrowableInformation"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"%"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"MX}Ul4Hbu36"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"12"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.ri.authz.DelegatingAuthorizationContext",
		"value":"org-jsecurity.ri.authz.DelegatingAuthorizationContext"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-3438",
		"value":"-3397"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"sP9-x"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"57"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"136"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1357"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"S*h5vl",
		"value":"S*h5v#l"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"@*c<0Gzb",
		"value":"@*c0Gzb"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2292",
		"value":"2310"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1814"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"true"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1486"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"G54~?a\u007Fo:;T+<lohz"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1214.5486"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1448",
		"value":"-1454"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"2zokxzC>k289LXKO\u007F"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"bbQX!"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"<V"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"L5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1537"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-2652.9097"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1384"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-83"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"p!6^|D5*))2Mg"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"4msP[B@%*pWj>W{+p7g"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]P>T "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"10"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"1.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"arguments "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"?5"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3256"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-664"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"!t,%uFkz7w=#X\"I.[i7"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"144"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1491"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"130.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"value cannot be null.  If youare trying to unbind a resourcefrom the thread, use the 'remove' method instead."
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 1491;\nfloat float0 = 130.0F;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0, float0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet0);\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nLinkedHashSet<String> linkedHashSet2 = new LinkedHashSet<String>(linkedHashSet1);\nint int1 = 0;\nLinkedHashSet<Permission> linkedHashSet3 = new LinkedHashSet<Permission>(int1);\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet2, linkedHashSet3);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"info"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"1t`"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"CP(}TsH{>9[10J{"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1541"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nString string0 = \"1t`\";\nString string1 = \"CP(}TsH{>9[10J{\";\nAllPermission allPermission0 = new AllPermission(string0, string1);\nString string2 = \"\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nList<AuthorizationModule> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(allPermission0, string2, method0, objectArray0, class0, list0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3282"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-259"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-430"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"AOP configuration seems to be invalid: tried calling "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3480"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1421.7378"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"11"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Y16@)cHacG"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3603"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"ksI,N1cXvtDtwAqYNg"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":".T=]."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"FP_lREq4u)6IknH"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-379"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"?pB0pJE`^Q_zsj+C"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1258"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1867"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"`="
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"(oHo'FRE*H/"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"38"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"46"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"?\"KO^K2{Ex"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.log4j.spi.Filter"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"74iG9\\;0%xD"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"4710"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-619"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"fatal"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"15"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"No ["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"&`Ex:)*K:*/b CDK,K"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"| Qjq3{3ro"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2772"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"46"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"v<oN+lkwI#\u007FZ4TY<p7"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":" - "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-388"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"d2VKw0zYZ20U2"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";3#H,Qp@"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"633"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-645"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2404"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"170"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3509"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1098.9677"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"{rg$/rk~svgH04/"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"invocation: method '"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":" - "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"\t"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1713"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-766"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"off"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2397"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"48"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1240"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":" <"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"QE>}*-D.S"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"zq.{/jc3:KiV8fPO>j"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"R];\"l\u007FB"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-62"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Kv"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"ZN\u007FJ,w'/g%CyXt|c["
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3tkS8&2I[D}@5`nH.li"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"G"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"133"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":" n<pP.v*"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"dK Kvl5"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"?"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"u8v2g`DB~9Qw@G>EeO"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#wZ7Z)4wWY"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-670"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1281"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-397.21945"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"<%gI`wDrF&)"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"hashCode"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"=}2w\"8VUCy5I:Y<\""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"D4drzQ.yFc'{Q(d|?6"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Z\\u6I"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"92"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"57cdpMA=0~wYqNd +`g"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[8];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) modularAuthorizer0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) serializablePermission0;\nobjectArray0[7] = (Object) authorizationInterceptor0;\nClass<Object> class0 = Object.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1728"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4991"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3336"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#AMDhTT"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"106"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-372.77737"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"INFO"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"unknown"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"I'OsnG=VMaA8XTQ{%"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.simplelog.dateTimeFormat"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1448"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":".9f\"-!]`p"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Q]\"_z]2["
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"25"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3884"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"NoMwz}[!M`$6IW\"[Ur3"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"aYc("
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"+a]S'!R[%7p1"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"10"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1940"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"bVGpS"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"m-$9qU"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"98"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"O.?>_,Mu\\\u007FpQPZh3c"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nint int0 = 22;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) authorizationInterceptor0;\nClass<Permission> class0 = Permission.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, integer0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[0];\nClass<String> class0 = String.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]fb"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"3306.587"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nObject object1 = null;\nAllPermission allPermission0 = new AllPermission();\nMethod method0 = null;\nObject[] objectArray0 = new Object[1];\nobjectArray0[0] = object1;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nStream<String> stream0 = linkedList0.parallelStream();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object1, allPermission0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Ma.7_>w/>50Ch"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1557"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Glv\"lsW a"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"-C2"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"46"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"cmtRe>I}t"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3X&DmD1'Le#^_"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"(_gfzub}eWha65^fN"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-562"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"[]"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Z&Q,HR<ONq!0\u007F@x*>j%",
		"value":"Z&Q,HQ<ONq!0\u007F@x*>j%"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"W"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] is "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"[`h"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Should be able to clone object of "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"IByGYB]*"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"132"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"/"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-1.0",
		"value":"-3.2788336"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":")"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-377"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"q"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"; nested exception is "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1595.057"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
		"value":"org.jsecurity.springq.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"10"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"|Ba;8"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1967"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-632"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4625"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"*%dQ86L\\40mHI"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] for key ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"5",
		"value":"29"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"706",
		"value":"671"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"LSDyVhZzksC;Uk?"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-987",
		"value":"-925"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"$aR4#J"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nint int0 = 0;\nLinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(int0);\nint int1 = 0;\nLinkedHashSet<AuthorizationModule> linkedHashSet1 = new LinkedHashSet<AuthorizationModule>(int1);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet1);\nCollection<Permission> collection0 = null;\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet0, collection0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nObject object1 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[3];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = object1;\nobjectArray0[2] = (Object) method0;\nClass<JMXPrincipal> class0 = JMXPrincipal.class;\nList<Permission> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, object1, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object6 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"z8C]S>X P=*?0;\\ "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Should be able to clone object of "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2893"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3283"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1315.2131"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2463"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"0s1IzGpp/WO'R"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"5"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"80"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2416"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = new Object();\nint int0 = (-2416);\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) objectArray0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = (Object) linkedHashSet0;\nobjectArray0[3] = (Object) linkedHashSet0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) method0;\nClass<String> class0 = String.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2150"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"B__a>z.X&B$D)qI"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"com.ibm.uvm.tools.DebugSupport"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"24"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"13"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2915"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1111"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"C2+c2ivkB\u007F_+:["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"dH6E1Zt]7Zw_Wd"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"@(>^`G"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"22"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"36"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":")hMr^>/"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":" <"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"false"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3695"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"vL!&&"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"49"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"b,"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"s"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"c"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"FHd2"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"DVE{["
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"F8_NwntPH`9,O"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"-1!:}T+e2F"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"i(@O&[8d"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation1 = null;\nObject object1 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"19"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"XC\u007Fz?H?WkjKg9Yk"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"FDR8}d{^ L"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"M?Q;rX[F~0D:,sq*J"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}#6lXG"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":",?nUL/01_fF"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"M$Ka%;="
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":":vAl&ABiSeSS"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1741"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1785"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"189"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1176"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-42"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"6"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"5r"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"dV9?@"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"n(bd\u007F87}_-"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"~If@"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-51"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nObject object1 = new Object();\nobjectArray0[0] = object1;\nobjectArray0[1] = object0;\nobjectArray0[2] = (Object) modularAuthorizer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) integer0;\nobjectArray0[5] = (Object) integer0;\nobjectArray0[6] = object0;\nClass<Permission> class0 = Permission.class;\nLinkedList<UnresolvedPermission> linkedList0 = new LinkedList<UnresolvedPermission>();\nLinkedList<UnresolvedPermission> linkedList1 = new LinkedList<UnresolvedPermission>(linkedList0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"132"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"3728.9"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"AMyD_"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"38"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"73"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"C,i\u007FU|"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2766"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":")M)Q,LW"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}6V3Dd^G|i7W"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"r@~^rycxGxO"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"[\"=!4m7yWm-\""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"qmZ$Kj"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.aopalliance.aop.AspectException"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"25"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"0 jx "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"s]+2"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"2T!v[U "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"=>2i,B',# JVcS@H"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"446"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"xT_Iu}a}XgJ\\lpQ"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"#:l\\-C6,%",
		"value":"#:l\\-6,%"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"OFF",
		"value":"FF"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"0bN",
		"value":"0bP"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"#",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-11"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"{Q`t7O|#"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"!-\u007FdVDfmm\\)T,:_C4",
		"value":"!-\u007FdVDfmm\\T,:_C4"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1446.945"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.apache.commons.logging.simplelog.dateTimeFormat",
		"value":"org.apache.commons.logging.simplelog.dateTimFormat"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"67"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1699.907"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-71",
		"value":"-43"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-2940",
		"value":"-2927"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"115"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"y`"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Juyt&a7YY*)"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.authz.NoSuchPrincipalException",
		"value":"org.jsecurity.athz.NoSuchPrincipalException"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"at the root of the classpath."
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"associated with this authorization context."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1207"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-8"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Vi8BN&/oG_"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"_E\"SEtl3}x"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.ri.authz.module.ModularAuthorizer",
		"value":"org.jsecurity.ri.authz.module.Modularuthorizer"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"~"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"m1po",
		"value":"m1p"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"?zY^ xC~9JD9!l"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"cHo*Jk^}WK8\"Y"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"2H7L"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"@X2=RL"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-975",
		"value":"-954"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Z^7#C9("
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"NYh?dl"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"n:i2{p*",
		"value":"n:i2{p+"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"6WLO-Py8",
		"value":"6WLO-y8"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"-2400.934",
		"value":"-2401.9724"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"5"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"967",
		"value":"939"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"763"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"ybXaA)~LT_I2U",
		"value":"ybXaA)~LT_I2~U"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"DyVmGg|.JraWBf"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"MycU\\{ZA(24{mFCV9A"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"%/,1T*~MiMy^u#",
		"value":"%/,1TS*~MiMy^u#"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"37"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"42"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-99"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"iaX8 W-g>Y|Z"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"!"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"25"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-3310.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":",wv[q?"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"l9pMlm\"("
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"k_BwwWi8mqQh:p*b~"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"arguments "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"=kFqs'/p){Cap#cpG`"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"B\"5]kAQm2{N{+b"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1049"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"9md|c5"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"No resource is associated with key \""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int0 = 1049;\nInteger integer0 = new Integer(int0);\nString string0 = \"9md|c5\";\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) authorizationInterceptor0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) method0;\nobjectArray0[3] = (Object) modularAuthorizer0;\nobjectArray0[4] = (Object) method0;\nObject object0 = new Object();\nobjectArray0[5] = object0;\nobjectArray0[6] = (Object) method0;\nObject object1 = new Object();\nobjectArray0[7] = object1;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<AuthorizationModule> class0 = AuthorizationModule.class;\nLinkedList<JMXPrincipal> linkedList0 = new LinkedList<JMXPrincipal>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, string0, method0, objectArray0, class0, linkedList0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-401"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1583"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1055.653"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"692"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-830"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1998"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"4047",
		"value":"4065"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"161"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}O,qUP"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"2n\\0=7f#:VijW.X"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Implies permissions:"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"7LwHq= P-Fz"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3466"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-654"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"53"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1081"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-171"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1213.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"11"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.authz.NoSuchPrincipalException"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3044"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] is "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1138"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"l}PJ"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"%;_0Zp*1$E+f|"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-87"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"58.32"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3335"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"F"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"=OKAB~+r7ih"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1482"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"-0]c!~aIRJpO"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] to thread "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"X\u007FnOVLgg:wNN"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<AuthorizationModule> linkedList0 = new LinkedList<AuthorizationModule>();\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(linkedList0);\nmodularAuthorizer1.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-636.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"t"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"JSecurity implementation JAR in the classpath.  The accessor can "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"toLevel"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"T'+wW[Z"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"PF3ZBd&Bzfn#"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"1*{#wi*5GY,e"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"/>/cZ +"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"|W7:uK|6z&B"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"10"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"+~2\\J9+@Z5' \u007FF!W(f"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"(A6Qx"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"|-3n<}{MO;M"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Oh;;w6lw"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1704"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2321"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Q%g~"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":" fi;s.( $J|f&"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"11"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"aL8n7"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"k\u007FL+b"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"&T1!NS-"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"+hiBW_AF\u007Fk"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"V&\"\u007F_!6Ra\\h\\*"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"4191.526",
		"value":"4159.697"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"vCHOJ+|"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"line.separator"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2561"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1342.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.impl.Log4JCategoryLog"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"&]/Tz"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"3g/yk~Hk,jN2u_TE"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"42",
		"value":"29"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"ua'mGR}W\"W8j 2M"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"R*Q{KRp5=DqjKZXg="
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"307"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-302"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2379"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nint int0 = (-302);\nInteger integer0 = new Integer(int0);\nObject object0 = null;\nMethod method0 = null;\nObject[] objectArray0 = new Object[2];\nobjectArray0[0] = (Object) integer0;\nobjectArray0[1] = object0;\nClass<Object> class0 = Object.class;\nLinkedList<String> linkedList0 = new LinkedList<String>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, object0, method0, objectArray0, class0, linkedList0);\nObject object1 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1314"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Wh61,NS$=)GB"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2200"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"authorizer property must be set"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4242"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"\t"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"515"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"FLOAT",
		"value":"-1.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3720"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.simplelog.defaultlog"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}8VC\"<F%T&"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-343"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1908"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Me/8r4=i9Y#i\"q"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"711"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-3645.3"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":".getAuthorizationContext().  "
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"4191.526",
		"value":"4191.2764"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"792"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"673.4"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1689"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"192"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-528"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"8\\q6' 9(kSeMW' HC"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-253"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"1590.6"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1278"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":";^R_+BE$bhi?OC=Nq"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"0[+B~w<j*y"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Qt*!{hh.><o*s&^"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-130"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"mE?5%_)d7]wkJ'+6-EY"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4083"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"DyVmGg|.JraWBf",
		"value":"DyVmGg~.JraWBf"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\"B?Nf~iM} "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1804"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1841"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"12"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"yyyy/MM/dd HH:mm:ss:SSS zzz"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Cm\\|B:W(D\"eTaaGa"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"120"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2102"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"124"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-4053"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1381.7943"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1555"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"XM0-sorA~q(2(>\""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"18"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"b*gkZ0dxu\\TND;J["
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nList<Principal> list0 = null;\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(list0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nList<Principal> list0 = null;\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(list0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"5256"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Ey{@#tEaH"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"=w$L]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#sZO\"J7VC_ IC"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Unexpected InvocationTargetException"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"=kFqs'/p){Cap#cpG`",
		"value":"=kFqs'/p){Can#cpG`"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"28"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"150"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-387"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"*iu\"?AO%D!<Zgumb_."
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"#<Mn:\\(1=+k7"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"] could not be found.  "
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.log4j.Level"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":")E#%3HW*"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"2"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"144"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"m}\\-0;"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1284",
		"value":"-1259"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Z#k!~"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"j"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"?4bYSo6\"",
		"value":"?4bYSo6!"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"]"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"{:bB;=yrVH"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-537.54"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
		"value":"org.jsecurity.spring.security.intercepto)r.AuthorizationInterceptor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2219"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"error",
		"value":"erroq"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":":_Ji\"\"26,=v+t4tc[16"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\\f{)\\I4F[V"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"JG_Gp'bGg))e5$$"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"Permissions ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"814"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"52.647484"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"true"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"PX5g6Cp9"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"0.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"W"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"18"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"/1,!\\9#y"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"[]",
		"value":"[^"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-822",
		"value":"-831"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"&'X#`Nyr<&e"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"1"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-12"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"Ti\u007F\\N>;qq&"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\\FVR;z"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"M)jfc3@]{70nLGM4oI"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.log4j.Logger"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"+"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"nX\\8D&wC^P_P/3Y73"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"%]nU7o[Vz=-FDc-\u007F -=",
		"value":"%]nU7o[Vtz=-FDc-\u007F -="
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1028"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
		"value":"org.jsecurity.spqing.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":" 9p"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"jsecurity.properties"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"4787"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2711"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"964"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"ZRK``m<||Jq.Y?6!"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"11",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"476",
		"value":"457"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"trace"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"109"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3446",
		"value":"3421"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"hxBl=#[,gH",
		"value":"hxBl=$[,gH"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"`-\"tUr",
		"value":"`-e\"tUr"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"s6F@G\"%]pG"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"646"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"2408.7336"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"6iK+)H_e.U=c:(9F"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"L~iTHcSLq",
		"value":"LiTHcSLq"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1811.3"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nint int0 = 17;\nInteger integer0 = new Integer(int0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nobjectArray0[7] = (Object) serializablePermission0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Integer> class0 = Integer.class;\nint int1 = 146;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object0 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Context does not imply permission [",
		"value":"Context doesnot imply permission ["
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nint int0 = 17;\nInteger integer0 = new Integer(int0);\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[9];\nobjectArray0[0] = (Object) serializablePermission0;\nobjectArray0[1] = (Object) method0;\nobjectArray0[2] = (Object) integer0;\nobjectArray0[3] = (Object) method0;\nobjectArray0[4] = (Object) method0;\nobjectArray0[5] = (Object) serializablePermission0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nobjectArray0[7] = (Object) serializablePermission0;\nobjectArray0[8] = (Object) authorizationInterceptor0;\nClass<Integer> class0 = Integer.class;\nint int1 = 146;\nLinkedHashSet<SecurityPermission> linkedHashSet0 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedList<Permission> linkedList0 = new LinkedList<Permission>(linkedHashSet0);\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(integer0, serializablePermission0, method0, objectArray0, class0, linkedList0);\nObject object0 = new Object();\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"b4*Buy"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"-mO1u=hj:<",
		"value":"-mO1um=hj:<"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"6166"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"P"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"3019.93"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"org.apache.log4j.Layout",
		"value":"orgapache.log4j.Layout"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"YvyAW '^"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"27",
		"value":"18"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-33"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-4"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"l"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2055"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"16"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Z",
		"value":"Zn"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"22",
		"value":"41"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"877"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"H8*xJ&",
		"value":"H8*xJr&"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"]Bgyf/[+/VrVo[("
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3967;\nfloat float0 = (-2646.7615F);\nLinkedHashSet<AuthorizationModule> linkedHashSet0 = new LinkedHashSet<AuthorizationModule>(int0);\nmodularAuthorizer0.setAuthorizationModules(linkedHashSet0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nModularAuthorizer modularAuthorizer1 = new ModularAuthorizer();\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>();\nLinkedHashSet<String> linkedHashSet1 = new LinkedHashSet<String>();\nint int1 = 2366;\nLinkedHashSet<SecurityPermission> linkedHashSet2 = new LinkedHashSet<SecurityPermission>(int1);\nLinkedHashSet<SecurityPermission> linkedHashSet3 = new LinkedHashSet<SecurityPermission>(linkedHashSet2);\nLinkedList<Permission> linkedList1 = new LinkedList<Permission>();\nSimpleAuthorizationContext simpleAuthorizationContext0 = new SimpleAuthorizationContext(linkedList0, linkedHashSet1, linkedList1);\nStream<String> stream0 = linkedHashSet1.stream();\nAuthorizedAction authorizedAction0 = null;\nSpliterator<SecurityPermission> spliterator0 = linkedHashSet2.spliterator();\nboolean boolean0 = modularAuthorizer0.isAuthorized(simpleAuthorizationContext0, authorizedAction0);\nSet<AuthorizationModule> set0 = null;\nmodularAuthorizer1.setAuthorizationModules(set0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext();\nAuthorizedAction authorizedAction1 = null;\nmodularAuthorizer0.checkAuthorization(delegatingAuthorizationContext0, authorizedAction1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nPermission permission0 = new AllPermission();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer1);\nint int2 = 877;\nPermission permission1 = linkedList1.remove(int2);\nModularAuthorizer modularAuthorizer2 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nString string0 = \"H8*xJr&\";\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBSTITUTION_PERMISSION;\nMethod method0 = null;\nObject[] objectArray0 = new Object[6];\nobjectArray0[0] = (Object) linkedHashSet2;\nobjectArray0[1] = (Object) serializablePermission0;\nobjectArray0[2] = (Object) authorizedAction0;\nClass<Object> class0 = Object.class;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(string0, serializablePermission0, method0, objectArray0, class0, linkedList1);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nMethodInvocation methodInvocation1 = reflectiveMethodInvocation0.invocableClone();\nObject object3 = new Object();\nString string1 = reflectiveMethodInvocation0.toString();\nObject object4 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object5 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object6 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object7 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nJMXPrincipal[] jMXPrincipalArray0 = new JMXPrincipal[1];\nString string2 = \"Method invocation [\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string2);\njMXPrincipalArray0[0] = jMXPrincipal0;\nJMXPrincipal[] jMXPrincipalArray1 = linkedHashSet3.toArray(jMXPrincipalArray0);\nObject object8 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object9 = authorizationInterceptor0.invoke(methodInvocation1);\nObject object10 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object11 = authorizationInterceptor0.invoke(methodInvocation0);\nMethodInvocation methodInvocation2 = reflectiveMethodInvocation0.invocableClone();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer2);\nObject object12 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object13 = authorizationInterceptor0.invoke(methodInvocation1);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"-24"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"h@l{pND(iuyVaVc{"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"\"."
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"2865",
		"value":"2880"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-6089"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.simplelog.log."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-3069.703"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Authorization will be denied."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"7`3x:h^BQ,'J[@CecQ",
		"value":"7`3x:h^BQ'J[@CecQ"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-554"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"282"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"Method invocation ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"@\\G3e0<I&:l^"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"RNW!9!uJP;A\u007Fw",
		"value":"RNW!9!uJP;Aw"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"User is not authenticated.  No AuthorizationContext available via ",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.ri.authz.module.NoDenialStrategy"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"1.0",
		"value":"1.1885887"
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"109.54",
		"value":"110.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"}u>s+*M:'Ib"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"q]B+-qbvNiKy8d"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Authorization will be denied.",
		"value":"Authorization will be denid."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"L~/zf|L7ro"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.log4j.helpers.AppenderAttachableImpl"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"nR_?.<[V"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"113"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-143",
		"value":"-135"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"pg2pX"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"]cx:b",
		"value":"]cxN:b"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"9PT6B0X{oX>?"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"81",
		"value":"107"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"183"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-342",
		"value":"-370"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2085"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-2131"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1522.6"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"FATAL"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3519",
		"value":"3523"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"135"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"I/#?&=amzPu:/iGr0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"z^6\u007FuQGBr`Q^#c|fBM "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"INT",
		"value":"32"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2215"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"53",
		"value":"32"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"eVZ6FQPnQU2V6u*'",
		"value":"eVZ6FPnQU2V6u*'"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"8QD\u007FS4yAl8>bv|r<"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"147"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>();\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":"="
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"3"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":54,
			"methodName":"afterPropertiesSet()V",
			"stringValue":"I4 Branch 1 IFNONNULL L54",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nint int0 = 3519;\nLinkedHashSet<JMXPrincipal> linkedHashSet0 = new LinkedHashSet<JMXPrincipal>(int0);\nLinkedHashSet<JMXPrincipal> linkedHashSet1 = new LinkedHashSet<JMXPrincipal>(linkedHashSet0);\nLinkedList<Principal> linkedList0 = new LinkedList<Principal>(linkedHashSet1);\nRealm realm0 = null;\nDelegatingAuthorizationContext delegatingAuthorizationContext0 = new DelegatingAuthorizationContext(linkedList0, realm0);\nAuthorizedAction authorizedAction0 = null;\nboolean boolean0 = modularAuthorizer0.isAuthorized(delegatingAuthorizationContext0, authorizedAction0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nAuthorizer authorizer0 = null;\nauthorizationInterceptor0.setAuthorizer(authorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"c\u007F Gs6kaDY]jKdME"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"1224"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"O=Bv)bIH&)\\)'Bq."
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Method invocation [",
		"value":"Method invoucation ["
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"674"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"3519",
		"value":"3524"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"4546fn4A$w>"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"!LHO2R!_!ks^>j|3"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"DEBUG"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"279"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"INT",
		"value":"43"
	},
	"EndSeed"
][
	"Events",
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nSerializablePermission serializablePermission0 = ObjectStreamConstants.SUBCLASS_IMPLEMENTATION_PERMISSION;\nString string0 = \"\";\nJMXPrincipal jMXPrincipal0 = new JMXPrincipal(string0);\nMethod method0 = null;\nObject[] objectArray0 = null;\nClass<String> class0 = String.class;\nLinkedList<Integer> linkedList0 = new LinkedList<Integer>();\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(serializablePermission0, jMXPrincipal0, method0, objectArray0, class0, linkedList0);\nObject object0 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object0 = null;\nint int0 = 0;\nInteger integer0 = new Integer(int0);\nMethod method0 = null;\nObject[] objectArray0 = new Object[7];\nobjectArray0[0] = (Object) modularAuthorizer0;\nobjectArray0[1] = (Object) integer0;\nobjectArray0[2] = object0;\nobjectArray0[3] = (Object) integer0;\nObject object1 = new Object();\nobjectArray0[4] = object1;\nobjectArray0[5] = (Object) method0;\nobjectArray0[6] = (Object) authorizationInterceptor0;\nClass<String> class0 = String.class;\nList<String> list0 = null;\nReflectiveMethodInvocation reflectiveMethodInvocation0 = new ReflectiveMethodInvocation(object0, integer0, method0, objectArray0, class0, list0);\nObject object2 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nObject object3 = authorizationInterceptor0.invoke(reflectiveMethodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"org.apache.commons.logging.simplelog.log."
	},
	{
		"Type":"Event: search",
		"DataType":"FLOAT",
		"oldValue":"0.0",
		"value":"-0.6344743"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"'"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"-1319",
		"value":"-1334"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"0WJ|duqvfK]2}w,h9a|",
		"value":"0WJ|duqvfK]2}w,h9a|"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"wT6xG5yGHGIh'5YO"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-490"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"k-\u007F"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"pA>{s`SA^S6Trb;9"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Unexpected InvocationTargetException",
		"value":"Unexpected InvocationTargetExceptin"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"Unexpected InvocationTargetException",
		"value":"Unexpected InvocationTargetException"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"A\\-BjQQ{qyR(#9rF"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"0",
		"value":"3"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-3894"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3237"
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"[WARN] ",
		"value":"[WARN] "
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"6`hvIL*h+\"ZJRM"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"33"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"q\u007F07be"
	},
	{
		"Type":"Event: search",
		"DataType":"INT",
		"oldValue":"149",
		"value":"156"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"708"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: search",
		"DataType":"STRING",
		"oldValue":"",
		"value":""
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3668"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"\\P"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"530"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"STRING",
		"value":""
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3742"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"FLOAT",
		"value":"0.0"
	},
	{
		"Type":"Event: dynamicPoolSampling",
		"DataType":"INT",
		"value":"0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"3251"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"STRING",
		"value":"tyLNdXs'e\"=G4v'S&%"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"2402"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-4206.0"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-142"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor",
			"lineNo":65,
			"methodName":"invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;",
			"stringValue":"I9 Branch 2 IFNULL L65",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":137,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I24 Branch 3 IFNONNULL L137",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":181,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I102 Branch 7 IFLE L181",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I117 Branch 9 IFNE L187",
			"truthValue":true
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":143,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I37 Branch 4 IFEQ L143",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":145,
			"methodName":"getAccessor()Lorg/jsecurity/context/SecurityContextAccessor;",
			"stringValue":"I47 Branch 5 IFNONNULL L145",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":164,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I10 Branch 6 IFNONNULL L164",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: branchCovering",
		"BranchInfo":{
			"className":"org.jsecurity.context.SecurityContext",
			"lineNo":187,
			"methodName":"getAccessorClassName(Ljava/lang/ClassLoader;)Ljava/lang/String;",
			"stringValue":"I112 Branch 8 IFNULL L187",
			"truthValue":false
		},
		"Testcode":"AuthorizationInterceptor authorizationInterceptor0 = new AuthorizationInterceptor();\nMethodInvocation methodInvocation0 = null;\nObject object0 = authorizationInterceptor0.invoke(methodInvocation0);\nModularAuthorizer modularAuthorizer0 = new ModularAuthorizer();\nauthorizationInterceptor0.setAuthorizer(modularAuthorizer0);\nObject object1 = authorizationInterceptor0.invoke(methodInvocation0);\nauthorizationInterceptor0.afterPropertiesSet();\n"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"User is not authenticated.  No AuthorizationContext available via "
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: staticPoolSampling",
		"DataType":"STRING",
		"value":"org.jsecurity.spring.security.interceptor.AuthorizationInterceptor$1"
	},
	{
		"Type":"Event: staticContextPoolSampling",
		"DataType":"STRING",
		"value":"WARN: Please see http://www.slf4j.org/codes.html#release for an explanation."
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"INT",
		"value":"-1610"
	},
	{
		"Type":"Event: randomSampling",
		"DataType":"FLOAT",
		"value":"-1800.9032"
	},
	"EndSeed"
][
	"Events",
	"EndSeed"
]